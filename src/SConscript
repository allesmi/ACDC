#Dependency check
def CheckPKGConfig(context, version):
	context.Message( 'checking for pkg-config...' )
	ret = context.TryAction('pkg-config --atleast-pkgconfig-version=%s' % version)[0]
	context.Result( ret )
	return ret

def CheckPKG(context, name):
	context.Message( 'Checking for %s... ' % name )
	ret = context.TryAction('pkg-config --exists \'%s\'' % name)[0]
	context.Result( ret )
	return ret


Object('custom-alloc.cc', CPPFLAGS=['-ggdb'], LIBS=['pthread'])


#ACDC Tools
acdc_env = Environment()
acdc_conf = Configure(acdc_env, custom_tests = { 'CheckPKGConfig' : CheckPKGConfig, 'CheckPKG' : CheckPKG })

if not acdc_conf.CheckHeader('pthread.h'):
	print "You need 'pthread.h'. Not Found!"
	Exit(1)
else:
	acdc_conf.env.Append(LIBS=['pthread'])

if not acdc_conf.CheckHeader('math.h'):
	print "You need 'math.h'. Not Found!"
	Exit(1)
else:
	acdc_conf.env.Append(LIBS=['m'])

if not acdc_conf.CheckPKGConfig('0.26'):
	print 'pkg-config >= 0.26 not found.'
	Exit(1)

if not acdc_conf.CheckPKG('glib-2.0 >= 2.32'):
	print 'glib-2.0 >= 2.32 not found'
	Exit(1)

acdc_env = acdc_conf.Finish()

acdc_env.ParseConfig('pkg-config --cflags --libs glib-2.0')
#acdc_env.Append(LIBS=['pthread'])
#acdc_env.Append(CPPFLAGS=['-fms-extensions'])
acdc_env.Program('acdc', ['main.c', 'memory.c', 'acdc.c', 'distribution.c', 'collections.c'])




#stand alone programs
optimal = Environment(CPPFLAGS=['-ggdb', '-DOPTIMAL_MODE'], LIBS=['pthread'])
glibc = Environment(CPPFLAGS=['-ggdb', '-DGLIBC_MODE'], LIBS=['pthread'])
hoard = Environment(CPPFLAGS=['-ggdb', '-DHOARD_MODE'], LIBS=['pthread', 'hoard'], LIBPATH=['../allocators'])
gperf = Environment(CPPFLAGS=['-ggdb', '-DGPERF_MODE'], LIBS=['pthread', 'tcmalloc'], LIBPATH=['../allocators'])

optimal.Object('locality-optimal', ['locality.cc'])
optimal.Object('false-sharing-optimal', ['false-sharing.c'])

glibc.Object('locality-glibc', ['locality.cc'])
glibc.Object('false-sharing-glibc', ['false-sharing.c'])
glibc.Object('heapcontention-glibc', ['heapcontention.c'])

hoard.Object('locality-hoard', ['locality.cc'])
hoard.Object('false-sharing-hoard', ['false-sharing.c'])
hoard.Object('heapcontention-hoard', ['heapcontention.c'])

gperf.Object('heapcontention-gperf', ['heapcontention.c'])

optimal.Program('locality-optimal', ['locality-optimal.o', 'custom-alloc.o'])
optimal.Program('false-sharing-optimal', ['false-sharing-optimal.o', 'custom-alloc.o'])

glibc.Program('locality-glibc', ['locality-glibc.o'])
glibc.Program('false-sharing-glibc', ['false-sharing-glibc.o'])
glibc.Program('heapcontention-glibc', ['heapcontention-glibc.o'])

hoard.Program('locality-hoard', ['locality-hoard.o'])
hoard.Program('false-sharing-hoard', ['false-sharing-glibc.o'])
hoard.Program('heapcontention-hoard', ['heapcontention-hoard.o'])

gperf.Program('heapcontention-gperf', ['heapcontention-gperf.o'])


# Test programs
Program('test-custom-alloc', ['test-custom-alloc.cc', 'custom-alloc.o'])
